def glob_func_test():
	"""
		This is to see how Glob function works.
		Grab all cpp file in the same directory and print them.
		:rtype: int
	"""
	print ("\nStart printing all cpp files in this folder\n---")
	# result : print all cpp files in the same folder with Sconstruct
	for item in Glob("*.cpp"):
		print(item)
	print("---\nDONE\n")
	return 0

def get_error_collection():
	"""
		You never use this func because this is the error collections to keep in mind.
		If you run this function, you will get error message from scons
		because hello.cpp has no main function.
		:rtype: int
	"""
	print ("\nYou called get_error_collection method.\n")
	print("Example 1:\n")	
	# This result gets error because there is no main function in hello.cpp
	# You need main function for compiling cpp files.
	app_hello = env.Program(target='hello', source=["hello.cpp"])


	print("Example 2:\n")
	# Because this file made by python, SCons treats all input as lists of files.
	common_sources = ['main.cpp', 'hello.cpp']
	# This generates a python error.
	Program('program1', common_sources + 'goodbye.cpp')

	#The following works correctly. You add two lists together to make another list.
	Program('program2', common_sources + ['goodbye.cpp'])


	return 0


def print_all_children(all_apps):
	"""
		This is the function to see all return value from Program() method.
		:rtype: int
	"""
	# Print all children item inside all_app
	print ("\nStart printing the children in all_apps\n---")
	for item in all_apps:
		for child in item.all_children():
			print (child)
	print("---\nDONE.\n")
	# result : Print [/bin/g++] and all object file for example :hello.o.  

	return 0


def tips_collection():
	"""
		This is tips collection. You can use for Sconstruct.
		:rtype: int
	"""
	
	"""
	#Example 1: Split function
	
		To make long lists of file names easier to deal with, SCons provides a Split function that takes a quoted list of file names, with the names separated by spaces or other white-space characters, and turns it into a list of separate file names.
		(From the official documentation: "Chapter 3 :3.5. Making Lists of Files Easier to Read")
	"""
	src_files = Split('main.cpp hello.cpp goodbye.cpp')
	print ("\nsrc_files is :",src_files,"\n")
	env.Program('program', src_files)

	return 0


env = Environment()

#glob_func_test()

all_apps = env.Program('my_program', Glob('*.cpp'))

#This is the function that 
#print_all_children(all_apps)

#This is the function that shows tips learned through the SCons docs.
#tips_collection()